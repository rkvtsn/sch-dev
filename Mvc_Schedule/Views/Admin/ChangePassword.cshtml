@model Mvc_Schedule.Models.DataModels.ModelViews.ChangePasswordModel
@{ViewBag.Title = "Смена пароля";}

@{ if (Model == null)
   {
   <h1 id="page-title">Выбранного пользователя не существует</h1>
   return;
   }
}

<link href="@Url.Content("/Content/validation.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h1 id="page-title">Новый пароль должен быть более @Membership.MinRequiredPasswordLength символов.</h1>

<div id="logon">
	@using (Html.BeginForm())
	{	
		@Html.AntiForgeryToken()
		@Html.HiddenFor(x => x.UserName)
		<div class="form-line">
        <div class="editor-label">
			@Html.LabelFor(m => m.NewPassword)
		</div>
		<div class="editor-field">
			@Html.PasswordFor(m => m.NewPassword)
			@Html.ValidationMessageFor(m => m.NewPassword)
		</div>
        </div>
        <div class="form-line">
     	<div class="editor-label">
			@Html.LabelFor(m => m.ConfirmPassword)
		</div>
		<div class="editor-field">
			@Html.PasswordFor(m => m.ConfirmPassword)
			@Html.ValidationMessageFor(m => m.ConfirmPassword)
		</div>
        </div>
	    @Html.ValidationSummary(true, "Не удалось изменить пароль. Исправьте ошибки и повторите попытку.")
		<input style="float: left" type="submit" value="Смена пароля" />
	}
    <form method="GET" action="../Index">
        <input  style="float: right" type="submit" value="Отмена"/>
    </form>
</div>

